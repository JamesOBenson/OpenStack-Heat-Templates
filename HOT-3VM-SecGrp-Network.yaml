heat_template_version: 2013-05-23

description: Simple template to deploy 3 compute instances with
  full networking and creates a new security group that allows
  all traffic to pass. Be sure to update your image, key, 
  public network name, security group.

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: Ubuntu
  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: ""
  public_net:
    type: string
    description: Public Network Name or ID
    default: public

resources:
#--------------#
# Network Info #
#--------------#
  private_net:
        type: OS::Neutron::Net
        properties:
          name: private-net

  private_subnet:
        type: OS::Neutron::Subnet
        properties:
          network_id: { get_resource: private_net }
          cidr: 192.168.1.0/24
          gateway_ip: 192.168.1.1

  router1:
        type: OS::Neutron::Router
        properties:
          external_gateway_info:
                network: { get_param: public_net }

  router1_interface:
        type: OS::Neutron::RouterInterface
        properties:
          router_id: { get_resource: router1 }
          subnet_id: { get_resource: private_subnet }

#---------------#
# Firewall Info #
#---------------#
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group that allows all traffic
      name: security group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - protocol: tcp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 1
          port_range_max: 65535
        - protocol: udp
          remote_ip_prefix: 0.0.0.0/0
          port_range_min: 1
          port_range_max: 65535

#---------------#
# Server 1 Info #
#---------------#
  server1_port:
        type: OS::Neutron::Port
        properties:
          network_id: { get_resource: private_net }
          security_groups: [ get_resource: server_security_group ]
          fixed_ips:
                - subnet_id: { get_resource: private_subnet }

  server1_floating_ip:
        type: OS::Neutron::FloatingIP
        properties:
          floating_network_id: { get_param: public_net }
          port_id: { get_resource: server1_port }

  server1:
        type: OS::Nova::Server
        properties:
          name: Server1
          image: { get_param: image }
          flavor: m1.class
          key_name: { get_param: key }
          networks:
                - port: { get_resource: server1_port }
          user_data:
                #!/bin/bash
                echo 127.0.0.1 localhost $HOSTNAME >> /etc/hosts
                apt-get -qqy update

#---------------#
# Server 2 Info #
#---------------#
  server2_port:
        type: OS::Neutron::Port
        properties:
          network_id: { get_resource: private_net }
          security_groups: [ get_resource: server_security_group ]
          fixed_ips:
                - subnet_id: { get_resource: private_subnet }

  server2_floating_ip:
        type: OS::Neutron::FloatingIP
        properties:
          floating_network_id: { get_param: public_net }
          port_id: { get_resource: server2_port }

  server2:
        type: OS::Nova::Server
        properties:
          name: Server2
          image: { get_param: image }
          flavor: m1.class
          key_name: { get_param: key }
          networks:
                - port: { get_resource: server2_port }
          user_data:
                #!/bin/bash
                echo 127.0.0.1 localhost $HOSTNAME >> /etc/hosts
                apt-get -qqy update

#---------------#
# Server 3 Info #
#---------------#
  server3_port:
        type: OS::Neutron::Port
        properties:
          network_id: { get_resource: private_net }
          security_groups: [ get_resource: server_security_group ]
          fixed_ips:
                - subnet_id: { get_resource: private_subnet }

  server3_floating_ip:
        type: OS::Neutron::FloatingIP
        properties:
          floating_network_id: { get_param: public_net }
          port_id: { get_resource: server3_port }

  server3:
        type: OS::Nova::Server
        properties:
          name: Server3
          image: { get_param: image }
          flavor: m1.class
          key_name: { get_param: key }
          networks:
                - port: { get_resource: server3_port }
          user_data:
                #!/bin/bash
                echo 127.0.0.1 localhost $HOSTNAME >> /etc/hosts
                apt-get -qqy update

#--------#
# OUTPUT #
#--------#
outputs:
  server1_private_ip:
        description: Private IP address of server1
        value: { get_attr: [ server1, first_address ] }
  server1_public_ip:
        description: Floating IP address of server1
        value: { get_attr: [ server1_floating_ip, floating_ip_address ] }
  server2_private_ip:
        description: Private IP address of server2
        value: { get_attr: [ server2, first_address ] }
  server2_public_ip:
        description: Floating IP address of server2
        value: { get_attr: [ server2_floating_ip, floating_ip_address ] }
  server3_private_ip:
        description: Private IP address of server3
        value: { get_attr: [ server3, first_address ] }
  server3_public_ip:
        description: Floating IP address of server3
        value: { get_attr: [ server3_floating_ip, floating_ip_address ] }
